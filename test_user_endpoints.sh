#!/bin/bash

# Script de teste para endpoints de usu√°rio
# Base URL da API
BASE_URL="http://localhost:8000/api"

echo "üß™ Testando Endpoints de Usu√°rio"
echo "================================="

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Fun√ß√£o para testar endpoint
test_endpoint() {
    local method=$1
    local endpoint=$2
    local data=$3
    local description=$4

    echo -e "\n${YELLOW}üîç Testando: $description${NC}"
    echo "URL: $method $BASE_URL$endpoint"

    if [ "$method" = "GET" ]; then
        response=$(curl -s -w "\n%{http_code}" "$BASE_URL$endpoint")
    else
        response=$(curl -s -w "\n%{http_code}" -X "$method" \
            -H "Content-Type: application/json" \
            -d "$data" \
            "$BASE_URL$endpoint")
    fi

    # Separar resposta e c√≥digo HTTP
    http_code=$(echo "$response" | tail -n1)
    response_body=$(echo "$response" | head -n -1)

    if [ "$http_code" -ge 200 ] && [ "$http_code" -lt 300 ]; then
        echo -e "${GREEN}‚úÖ Sucesso (HTTP $http_code)${NC}"
        echo "Resposta: $response_body"
    else
        echo -e "${RED}‚ùå Erro (HTTP $http_code)${NC}"
        echo "Resposta: $response_body"
    fi

    echo "---"
}

# 1. Criar usu√°rio administrador
echo -e "\n${GREEN}1. Criando usu√°rio administrador...${NC}"
test_endpoint "POST" "/users" '{
    "name": "Administrador Sistema",
    "email": "admin@sistema.com",
    "password": "admin123",
    "phone": "(11) 99999-9999",
    "tipo": "admin"
}' "Criar usu√°rio administrador"

# 2. Criar usu√°rio comum
echo -e "\n${GREEN}2. Criando usu√°rio comum...${NC}"
test_endpoint "POST" "/users" '{
    "name": "Funcion√°rio Teste",
    "email": "funcionario@teste.com",
    "password": "senha123",
    "phone": "(11) 88888-8888",
    "tipo": "comum"
}' "Criar usu√°rio comum"

# 3. Listar todos os usu√°rios
echo -e "\n${GREEN}3. Listando todos os usu√°rios...${NC}"
test_endpoint "GET" "/users" "" "Listar todos os usu√°rios"

# 4. Buscar usu√°rios por tipo
echo -e "\n${GREEN}4. Buscando usu√°rios administradores...${NC}"
test_endpoint "GET" "/users?tipo=admin" "" "Buscar usu√°rios admin"

# 5. Buscar usu√°rios por tipo
echo -e "\n${GREEN}5. Buscando usu√°rios comuns...${NC}"
test_endpoint "GET" "/users?tipo=comum" "" "Buscar usu√°rios comuns"

# 6. Pesquisa avan√ßada
echo -e "\n${GREEN}6. Pesquisa avan√ßada por nome...${NC}"
test_endpoint "GET" "/users/search?name=admin" "" "Pesquisa avan√ßada"

# 7. Estat√≠sticas dos usu√°rios
echo -e "\n${GREEN}7. Obtendo estat√≠sticas...${NC}"
test_endpoint "GET" "/users/stats" "" "Estat√≠sticas dos usu√°rios"

# 8. Testar busca por usu√°rio espec√≠fico (ID 1)
echo -e "\n${GREEN}8. Buscando usu√°rio espec√≠fico (ID 1)...${NC}"
test_endpoint "GET" "/users/1" "" "Buscar usu√°rio por ID"

echo -e "\n${GREEN}üéâ Testes conclu√≠dos!${NC}"
echo "Verifique as respostas acima para confirmar o funcionamento dos endpoints."

